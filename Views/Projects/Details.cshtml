@model ProjectManager.ViewModels.ProjectTasksViewModel

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>Project</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Project.ProjectName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Project.ProjectName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.ProjectProgress)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.ProjectProgress)
        </dd>
    </dl>
</div>

<div>
    <h5>Project Tasks</h5>
    <table class="table">
        <thead>
            <tr>
                <th>
                    Total Tasks
                </th>
                @foreach (var item in (IEnumerable<string>)ViewData["Statuses"])
                {
                    <th>
                        @item
                    </th>
                }
                <th>
                   Overdue in 2 Days of Fewer
                </th>
            </tr>
        </thead>
        <tbody>
            
            <tr>
                <td>
                    @Model.Tasks.ToArray().Count()
                </td>
                @foreach (var item in (IEnumerable<string>)ViewData["Statuses"])
                {
                    <td>
                        @Model.Tasks.Where(t => t.Status.Name.Equals(item)).ToArray().Count()
                    </td>
                }
                <td>
                    @Model.Tasks.Where(t => t.Deadline.Day - DateTime.Now.Day <= 2).ToArray().Count()
                </td>
            </tr>
            
        </tbody>
    </table>
</div>


<div>
    <h5>Project Tasks Details</h5>
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Tasks.FirstOrDefault().Status)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Tasks.FirstOrDefault().Deadline)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Tasks.FirstOrDefault().Description)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Tasks.FirstOrDefault().Progress)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Tasks.FirstOrDefault().Assignee)
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Tasks)
            {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Status.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Deadline)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Progress)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Assignee.UserName)
                </td>
            </tr>
            }
        </tbody>
    </table>
</div>

<div>
    <a asp-action="Edit" asp-route-id="@Model.Project.ProjectCode">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>
